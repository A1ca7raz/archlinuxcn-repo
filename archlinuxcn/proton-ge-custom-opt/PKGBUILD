# Maintainer: Coelacanthus <CoelacanthusHex@gmail.com>
# Contributor: loathingkernel <loathingkernel _a_ gmail _d_ com>
# Contributor: Jaja <jaja@mailbox.org>

pkgname=proton-ge-custom-opt
_pkgname=proton-ge-custom
pkgver=GE.Proton8.10
_srctag=${pkgver//./-} # _srctag=GE-Proton7-32
_geckover=2.47.3
_monover=8.0.0
pkgrel=2
epoch=2
pkgdesc="Compatibility tool for Steam Play based on Wine and additional components, GloriousEggroll's custom build"
url="https://github.com/GloriousEggroll/proton-ge-custom"
arch=(x86_64 x86_64_v3)
options=(!staticlibs !lto emptydirs)
license=('BSD' 'LGPL' 'zlib' 'MIT' 'MPL' 'custom')
provides=('proton' "proton-ge-custom=${pkgver}")
conflicts=('proton-ge-custom')

depends=(
         attr             lib32-attr
         lcms2            lib32-lcms2
         libxml2          lib32-libxml2
         gettext          lib32-gettext
         gcc-libs         lib32-gcc-libs
         gtk3             lib32-gtk3
         libpcap          lib32-libpcap
         lzo              lib32-lzo
         libxkbcommon     lib32-libxkbcommon
         faudio           lib32-faudio
         libvpx           lib32-libvpx
         libsoup          lib32-libsoup
         orc              lib32-orc
         libgudev         lib32-libgudev
         libgcrypt        lib32-libgcrypt
         libxcb           lib32-libxcb
         blas             lib32-blas
         lapack           lib32-lapack
         jsoncpp
         desktop-file-utils
         python
         cabextract
         steam-native-runtime
         
         # in steam-native-runtime
         #libxcursor       lib32-libxcursor
         #libxrandr        lib32-libxrandr
         #libxdamage       lib32-libxdamage
         #libxi            lib32-libxi
         #libxcomposite    lib32-libxcomposite
         #libxinerama      lib32-libxinerama
         #freetype2        lib32-freetype2
         #glu              lib32-glu
         #libsm            lib32-libsm
         #sdl2             lib32-sdl2
         #fontconfig       lib32-fontconfig
         # end
)

makedepends=(
             git wget rsync
             perl fontforge
             autoconf meson cmake
             glslang vulkan-headers opencl-headers libgphoto2 gsm
             clang mingw-w64-tools mingw-w64-gcc lld nasm bison flex
             python-virtualenv python-pip
 
             giflib                lib32-giflib
             libpng                lib32-libpng
             gnutls                lib32-gnutls
             libxcb                lib32-libxcb
             mpg123                lib32-mpg123
             v4l-utils             lib32-v4l-utils
             mesa                  lib32-mesa
             opencl-icd-loader     lib32-opencl-icd-loader
             libxslt               lib32-libxslt
             gst-plugins-base-libs lib32-gst-plugins-base-libs
             vulkan-icd-loader     lib32-vulkan-icd-loader
             rust                  lib32-rust-libs
             orc                   lib32-orc
             libgudev              lib32-libgudev
             gsm                   lib32-gsm
             
             # in steam-native-runtime
             #libxrandr        lib32-libxrandr
             #libxdamage       lib32-libxdamage
             #libxi            lib32-libxi
             #libxcomposite    lib32-libxcomposite
             #libxinerama      lib32-libxinerama
             #libxmu                lib32-libxmu
             #libxxf86vm            lib32-libxxf86vm
             #freetype2        lib32-freetype2
             #glu              lib32-glu
             #libsm            lib32-libsm
             #sdl2             lib32-sdl2
             #fontconfig       lib32-fontconfig
             #libva                 lib32-libva
             #openal                lib32-openal
             #alsa-lib              lib32-alsa-lib
             #libpulse              lib32-libpulse
             # end
)

optdepends=(
            'kdialog: KDE splash dialog support'
            'zenity: GNOME splash dialog support'
            'python-kivy: splash dialog support (big picture mode)'
            'steam: use proton with steam like intended'
            'vulkan-icd-loader: dxvk dependency'
            'lib32-vulkan-icd-loader: dxvk dependency for 32bit prefixes'
            'vulkan-driver: driver to be used by dxvk'
            'winetricks: protonfixes backend'

            giflib                lib32-giflib
            libpng                lib32-libpng
            gnutls                lib32-gnutls
            mpg123                lib32-mpg123
            v4l-utils             lib32-v4l-utils
            libjpeg-turbo         lib32-libjpeg-turbo
            opencl-icd-loader     lib32-opencl-icd-loader
            libxslt               lib32-libxslt
            gtk3                  lib32-gtk3
            gst-plugins-base-libs lib32-gst-plugins-base-libs
            gsm                   lib32-gsm
            libgphoto2
            dosbox
)

source=(
    proton-ge-custom::git+https://github.com/gloriouseggroll/proton-ge-custom.git#tag=${_srctag}
    wine-valve::git+https://github.com/ValveSoftware/wine.git
    dxvk::git+https://github.com/doitsujin/dxvk.git
    openvr::git+https://github.com/ValveSoftware/openvr.git
    liberation-fonts::git+https://github.com/liberationfonts/liberation-fonts.git
    gstreamer::git+https://gitlab.freedesktop.org/gstreamer/gstreamer.git
    gst-plugins-base::git+https://gitlab.freedesktop.org/gstreamer/gst-plugins-base.git
    gst-plugins-good::git+https://gitlab.freedesktop.org/gstreamer/gst-plugins-good.git
    gst-orc::git+https://gitlab.freedesktop.org/gstreamer/orc.git
    vkd3d-proton::git+https://github.com/HansKristian-Work/vkd3d-proton.git
    OpenXR-SDK::git+https://github.com/KhronosGroup/OpenXR-SDK.git
    dxvk-nvapi::git+https://github.com/jp7677/dxvk-nvapi.git
    vkd3d-valve::git+https://github.com/ValveSoftware/vkd3d.git
    Vulkan-Headers::git+https://github.com/KhronosGroup/Vulkan-Headers.git
    SPIRV-Headers::git+https://github.com/KhronosGroup/SPIRV-Headers.git
    Vulkan-Loader::git+https://github.com/KhronosGroup/Vulkan-Loader.git
    gst-libav::git+https://gitlab.freedesktop.org/gstreamer/gst-libav.git
    ffmpeg::git+https://git.ffmpeg.org/ffmpeg.git
    dav1d::git+https://code.videolan.org/videolan/dav1d.git
    gst-plugins-rs::git+https://gitlab.freedesktop.org/gstreamer/gst-plugins-rs.git
    dxil-spirv::git+https://github.com/HansKristian-Work/dxil-spirv.git
    wine-staging::git+https://github.com/wine-staging/wine-staging.git
    protonfixes-gloriouseggroll::git+https://github.com/gloriouseggroll/protonfixes.git
    gst-plugins-bad::git+https://gitlab.freedesktop.org/gstreamer/gst-plugins-bad.git
    gst-plugins-ugly::git+https://gitlab.freedesktop.org/gstreamer/gst-plugins-ugly.git
    graphene::git+https://github.com/ebassi/graphene.git
    mingw-directx-headers::git+https://github.com/Joshua-Ashton/mingw-directx-headers.git
    glslang::git+https://github.com/KhronosGroup/glslang.git
    openfst::git+https://github.com/alphacep/openfst.git
    kaldi::git+https://github.com/alphacep/kaldi.git
    vosk-api::git+https://github.com/alphacep/vosk-api.git
    libdisplay-info::git+https://gitlab.freedesktop.org/JoshuaAshton/libdisplay-info.git
    https://dl.winehq.org/wine/wine-gecko/${_geckover}/wine-gecko-${_geckover}-x86{,_64}.tar.xz
    https://github.com/madewokherd/wine-mono/releases/download/wine-mono-${_monover}/wine-mono-${_monover}-x86.tar.xz
    0001-AUR-PKGBUILD-changes.patch
    fix_hwnd_changes_meaning.patch
    launcher.sh
)
noextract=(
    wine-gecko-${_geckover}-{x86,x86_64}.tar.xz
    wine-mono-${_monover}-x86.tar.xz
)

_make_wrappers () {
    #     _arch     prefix   gcc    ld             as     strip
    local _i686=(  "i686"   "-m32" "-melf_i386"   "--32" "elf32-i386")
    local _x86_64=("x86_64" "-m64" "-melf_x86_64" "--64" "elf64-x86-64")
    local _opts=(_i686 _x86_64)
    declare -n _opt
    for _opt in "${_opts[@]}"; do
        for l in ar ranlib nm; do
            ln -s /usr/bin/gcc-$l wrappers/${_opt[0]}-pc-linux-gnu-$l
        done
        for t in gcc g++; do
            install -Dm755 /dev/stdin wrappers/${_opt[0]}-pc-linux-gnu-$t <<EOF
#!/usr/bin/bash
$(which ccache 2> /dev/null) /usr/bin/$t ${_opt[1]} "\$@"
EOF
        done
        install -Dm755 /dev/stdin wrappers/${_opt[0]}-pc-linux-gnu-ld <<EOF
#!/usr/bin/bash
/usr/bin/ld ${_opt[2]} "\$@"
EOF
        install -Dm755 /dev/stdin wrappers/${_opt[0]}-pc-linux-gnu-as <<EOF
#!/usr/bin/bash
/usr/bin/as ${_opt[3]} "\$@"
EOF
        install -Dm755 /dev/stdin wrappers/${_opt[0]}-pc-linux-gnu-strip <<EOF
#!/usr/bin/bash
/usr/bin/strip -F ${_opt[4]} "\$@"
EOF
    done
}

prepare() {
    # I know this is fugly and it should NOT be done
    # but the afdko package from AUR breaks regularly.
    # Install it from pip in a virtualenv
    [ -d build_venv ] && rm -rf build_venv
    virtualenv --app-data "$srcdir"/build_venv/cache --no-wheel build_venv
    source build_venv/bin/activate
    pip install --no-cache-dir afdko
    pip install --no-cache-dir pefile

    # Provide wrappers to compiler tools
    rm -rf wrappers && mkdir wrappers
    _make_wrappers

    [ ! -d build ] && mkdir build
    cd proton-ge-custom

    [ ! -d contrib ] && mkdir -p contrib
    mv "$srcdir"/wine-gecko-${_geckover}-x86{,_64}.tar.xz contrib/
    mv "$srcdir"/wine-mono-${_monover}-x86.tar.xz contrib/

    _submodules=(
        wine-valve::wine
        dxvk
        openvr
        liberation-fonts::fonts/liberation-fonts
        gstreamer
        gst-plugins-base
        gst-plugins-good
        gst-orc
        vkd3d-proton
        OpenXR-SDK
        dxvk-nvapi
        vkd3d-valve::vkd3d
        Vulkan-Headers
        SPIRV-Headers
        Vulkan-Loader
        gst-libav
        ffmpeg::FFmpeg
        dav1d
        gst-plugins-rs
        wine-staging
        protonfixes-gloriouseggroll::protonfixes
        gst-plugins-bad
        gst-plugins-ugly
        graphene
        glslang
        openfst
        kaldi
        vosk-api
    )

    for submodule in "${_submodules[@]}"; do
        git submodule init "${submodule#*::}"
        git submodule set-url "${submodule#*::}" "$srcdir"/"${submodule%::*}"
        git -c protocol.file.allow=always submodule update "${submodule#*::}"
    done

    pushd vkd3d-proton
        for submodule in subprojects/{dxil-spirv,Vulkan-Headers,SPIRV-Headers}; do
            git submodule init "${submodule}"
            git submodule set-url "${submodule}" "$srcdir"/"${submodule#*/}"
            git -c protocol.file.allow=always submodule update "${submodule}"
        done
        pushd subprojects/dxil-spirv
            git submodule init third_party/spirv-headers
            git submodule set-url third_party/spirv-headers "$srcdir"/SPIRV-Headers
            git -c protocol.file.allow=always submodule update third_party/spirv-headers
        popd
    popd

    pushd dxvk-nvapi
        git submodule init external/Vulkan-Headers
        git submodule set-url external/Vulkan-Headers "$srcdir"/Vulkan-Headers
        git -c protocol.file.allow=always submodule update external/Vulkan-Headers
    popd
    
    pushd dxvk
        git submodule init include/vulkan
        git submodule set-url include/vulkan "$srcdir"/Vulkan-Headers
        git -c protocol.file.allow=always submodule update include/vulkan
        
        git submodule init include/spirv
        git submodule set-url include/spirv "$srcdir"/SPIRV-Headers
        git -c protocol.file.allow=always submodule update include/spirv
        
        git submodule init include/native/directx
        git submodule set-url include/native/directx "$srcdir"/mingw-directx-headers
        git -c protocol.file.allow=always submodule update include/native/directx
        
        git submodule init subprojects/libdisplay-info
        git submodule set-url subprojects/libdisplay-info "$srcdir"/libdisplay-info
        git -c protocol.file.allow=always submodule update subprojects/libdisplay-info
    popd

    for submodule in gst-plugins-rs media-converter; do
    pushd $submodule
        cargo update --locked --workspace
        cargo fetch --locked --target "i686-unknown-linux-gnu"
        cargo fetch --locked --target "x86_64-unknown-linux-gnu"
    popd
    done

    ./patches/protonprep-valve-staging.sh || true # workaround applied patch

    patch -p1 -i "$srcdir"/0001-AUR-PKGBUILD-changes.patch
    patch -p1 -i "$srcdir"/fix_hwnd_changes_meaning.patch
    pushd FFmpeg
        # Fixes assembling with binutil as >= 2.41
        git cherry-pick -n effadce6c756247ea8bae32dc13bb3e6f464f0eb
    popd
}

build() {
    export PATH="$(pwd)/wrappers:$PATH"

    cd build
    ROOTLESS_CONTAINER="" \
    ../proton-ge-custom/configure.sh \
        --container-engine="none" \
        --build-name="${_pkgname}"

    # Filter known bad flags before applying optimizations
    # Filter fstack-protector{ ,-all,-strong} flag for MingW.
    # https://github.com/Joshua-Ashton/d9vk/issues/476
    export CFLAGS="${CFLAGS//-fstack-protector*([\-all|\-strong])/}"
    export CXXFLAGS="${CXXFLAGS//-fstack-protector*([\-all|\-strong])/}"
  
    # ICE in i386_pe_seh_unwind_emit
    # https://gcc.gnu.org/bugzilla/show_bug.cgi?id=90458
    export CFLAGS="${CFLAGS//-fstack-clash-protection/}"
    export CXXFLAGS="${CXXFLAGS//-fstack-clash-protection/}"
    
    # MinGW don't support fortified functions at all
    # https://github.com/msys2/MINGW-packages/issues/5803
    # https://sourceforge.net/p/mingw-w64/mailman/message/36764708/
    export CFLAGS="${CFLAGS//-Wp,-D_FORTIFY_SOURCE=2/}"
    export CXXFLAGS="${CXXFLAGS//-Wp,-D_FORTIFY_SOURCE=2/}"
  
    # Doesn't compile without remove these flags as of 4.10
    export CFLAGS="${CFLAGS//-fno-plt/}"
    export CXXFLAGS="${CXXFLAGS//-fno-plt/}"

    # basic optimizations for x86-64-v3
    export CFLAGS+=" -O2 -march=x86-64-v3 -mtune=core-avx2 -mfpmath=sse -pipe"
    export CXXFLAGS+=" -O2 -march=x86-64-v3 -mtune=core-avx2 -mfpmath=sse -pipe"
    export RUSTFLAGS="-C opt-level=3 -C target-cpu=x86-64-v3"
  
    # addition optimizations from -O3
    export CFLAGS+=" -floop-interchange -ftree-loop-distribution"
    export CXXFLAGS+=" -floop-interchange -ftree-loop-distribution"
    
    # If using -march=native and the CPU supports AVX, launching a d3d9
    # game can cause an Unhandled exception. The cause seems to be the
    # combination of AVX instructions and tree vectorization (implied by O3),
    # all tested archictures from sandybridge to haswell are affected.
    # Since Wine 5.16 AVX is supported. Testing showed 32bit applications
    # crashing with AVX regardless, but 64bit applications worked just fine.
    # Relevant Wine issues
    # https://bugs.winehq.org/show_bug.cgi?id=45289
    # https://bugs.winehq.org/show_bug.cgi?id=43516
    # AVX is "hard" disabled for 32bit in any case.
    # AVX2 for 64bit is disabled below.
    # TODO: Temporarily shut down to observe whether it works normally
    #export CFLAGS+=" -mno-avx2"
    #export CXXFLAGS+=" -mno-avx2"

    export LDFLAGS="${LDFLAGS//,-z,now/}"
    export LDFLAGS="${LDFLAGS//,-z,relro/}"

    make SUBJOBS="$(nproc)" USE_LTO=1 CONTAINER=1 -j1 dist
}

package() {
    cd build
    local _compatdir="$pkgdir/usr/share/steam/compatibilitytools.d"
    mkdir -p "$_compatdir"
    cp -rf --no-dereference --preserve=mode,links dist "$_compatdir/${_pkgname}"

    mkdir -p "$pkgdir/usr/share/licenses/${_pkgname}"
    mv "$_compatdir/${_pkgname}"/LICENSE{,.OFL} \
        "$pkgdir/usr/share/licenses/${_pkgname}"

    cd "$_compatdir/${_pkgname}/files"
    i686-w64-mingw32-strip --strip-unneeded \
        $(find lib/wine \( -iname fakedlls -or -iname i386-windows \) -prune -false -or -iname "*.dll" -or -iname "*.exe")
    x86_64-w64-mingw32-strip --strip-unneeded \
        $(find lib64/wine \( -iname fakedlls -or -iname x86_64-windows \) -prune -false -or -iname "*.dll" -or -iname "*.exe")

    local _geckodir="share/wine/gecko/wine-gecko-${_geckover}"
    i686-w64-mingw32-strip --strip-unneeded \
        $(find "$_geckodir"-x86 -iname "*.dll" -or -iname "*.exe")
    x86_64-w64-mingw32-strip --strip-unneeded \
        $(find "$_geckodir"-x86_64 -iname "*.dll" -or -iname "*.exe")

    local _monodir="share/wine/mono/wine-mono-${_monover}"
    i686-w64-mingw32-strip --strip-unneeded \
        $(find "$_monodir"/lib/mono -iname "*.dll" -or -iname "*.exe")
    i686-w64-mingw32-strip --strip-unneeded \
        "$_monodir"/lib/x86/*.dll \
        $(find "$_monodir" -iname "*x86.dll" -or -iname "*x86.exe")
    x86_64-w64-mingw32-strip --strip-unneeded \
        "$_monodir"/lib/x86_64/*.dll \
        $(find "$_monodir" -iname "*x86_64.dll" -or -iname "*x86_64.exe")

    ## licenses
    local _licensedir=usr/share/licenses/${pkgname}
    install -Dm644 "${srcdir}/proton-ge-custom/LICENSE" "${pkgdir}/${_licensedir}/LICENSE"
    install -Dm644 "${srcdir}/proton-ge-custom/LICENSE.proton" "${pkgdir}/${_licensedir}/LICENSE.proton"
    install -Dm644 "${srcdir}/proton-ge-custom/wine/LICENSE" "${pkgdir}/${_licensedir}/LICENSE.wine"
    install -Dm644 "${srcdir}/proton-ge-custom/protonfixes/LICENSE" "${pkgdir}/${_licensedir}/LICENSE.protonfixes"
    install -Dm644 "${srcdir}/proton-ge-custom/vkd3d/LICENSE" "${pkgdir}/${_licensedir}/LICENSE.vkd3d"
    install -Dm644 "${srcdir}/proton-ge-custom/dxvk/LICENSE" "${pkgdir}/${_licensedir}/LICENSE.dxvk"

    # install executables
    sed -i "s|_proton=echo|_proton=/usr/share/steam/compatibilitytools.d/${_pkgname}/proton|" "${srcdir}"/launcher.sh
    install -Dm0755 "${srcdir}"/launcher.sh "${pkgdir}/usr/bin/${_pkgname}"
}

sha256sums=('SKIP'
            'SKIP'
            'SKIP'
            'SKIP'
            'SKIP'
            'SKIP'
            'SKIP'
            'SKIP'
            'SKIP'
            'SKIP'
            'SKIP'
            'SKIP'
            'SKIP'
            'SKIP'
            'SKIP'
            'SKIP'
            'SKIP'
            'SKIP'
            'SKIP'
            'SKIP'
            'SKIP'
            'SKIP'
            'SKIP'
            'SKIP'
            'SKIP'
            'SKIP'
            'SKIP'
            'SKIP'
            'SKIP'
            'SKIP'
            'SKIP'
            'SKIP'
            '08d318f3dd6440a8a777cf044ccab039b0d9c8809991d2180eb3c9f903135db3'
            '0beac419c20ee2e68a1227b6e3fa8d59fec0274ed5e82d0da38613184716ef75'
            '14c7d76780b79dc62d8ed9d1759e7adcfa332bb2406e2e694dee7b2128cc7a77'
            '5328f11fa467b6c33f516277683e43c1e4708a537ae34045322133aa915d0eb5'
            '20824bb565fefcad4aa978c54e0f8b9d9d17b7b52fb03fc87943150de148f06f'
            '85d41eb3879cd69cbc711923611c3a9703f8ef946df526956b484d0c560c4b5f')

