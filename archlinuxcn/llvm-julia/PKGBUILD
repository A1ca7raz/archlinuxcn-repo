# Maintainer: Evangelos Foutras <evangelos@foutrelis.com>
# Contributor: Jan "heftig" Steffens <jan.steffens@gmail.com>

pkgname=(llvm-julia llvm-libs-julia)
pkgver=16.0.0
pkgrel=1
_julia_rel=
_julia_commit=5f05685e0fa26391f16ce90cfaf34953fc9d9575
arch=(i686 x86_64 armv7h aarch64)
url="https://llvm.org/"
license=('custom:Apache 2.0 with LLVM Exception')
makedepends=('cmake' 'ninja' 'zlib' 'zstd' 'libffi' 'libedit' 'ncurses'
             'libxml2' 'python-setuptools' 'python-psutil' 'python-sphinx'
             'python-recommonmark' 'git')
# Disable LTO for now since there seems to be some issue at least on aarch64
# https://github.com/llvm/llvm-project/issues/57740
options=('staticlibs' '!strip' '!lto')
if [[ -z $_julia_rel ]]; then
  source=(https://github.com/JuliaLang/llvm-project/archive/${_julia_commit}.tar.gz)
  repodir=llvm-project-${_julia_commit}
else
  source=(https://github.com/JuliaLang/llvm-project/archive/refs/tags/julia-$pkgver-$_julia_rel.tar.gz)
  repodir=llvm-project-julia-$pkgver-$_julia_rel
fi
sha256sums=('61d36eabc2632682aeb3bde83e38871ff1f22479c9a0fd06872ff39acb955299')

# # Utilizing LLVM_DISTRIBUTION_COMPONENTS to avoid
# # installing static libraries; inspired by Gentoo
# _get_distribution_components() {
#   local target
#   ninja -t targets | grep -Po 'install-\K.*(?=-stripped:)' | while read -r target; do
#     case $target in
#       llvm-libraries|distribution)
#         continue
#         ;;
#       # shared libraries
#       LLVM|LLVMgold)
#         ;;
#       # libraries needed for clang-tblgen
#       LLVMDemangle|LLVMSupport|LLVMTableGen)
#         ;;
#       # exclude static libraries
#       LLVM*)
#         continue
#         ;;
#       # exclude llvm-exegesis (doesn't seem useful without libpfm)
#       llvm-exegesis)
#         continue
#         ;;
#     esac
#     echo $target
#   done
# }

prepare() {
  cd ${repodir}/llvm
  mkdir build

  # Arch patches
  msg "Applying Arch patches"
}

build() {
  cd ${repodir}/llvm/build

  export PATH="${srcdir}/bin:${PATH}"
  CFLAGS+=" -ffile-prefix-map=${srcdir}=${DBGSRCDIR:-/usr/src/debug}"
  CXXFLAGS+=" -ffile-prefix-map=${srcdir}=${DBGSRCDIR:-/usr/src/debug}"
  CFLAGS+=' -ggdb1 -O3 -fasynchronous-unwind-tables'
  CXXFLAGS+=' -ggdb1 -O3 -fasynchronous-unwind-tables'
  LDFLAGS+=' -O3 -fasynchronous-unwind-tables'


  local cmake_args=(
    -G Ninja
    -DCMAKE_BUILD_TYPE=Release
    -DCMAKE_INSTALL_DOCDIR=share/doc
    -DCMAKE_INSTALL_PREFIX=/usr
    -DCMAKE_SKIP_RPATH=ON
    -DLLVM_BINUTILS_INCDIR=/usr/include
    -DLLVM_BUILD_DOCS=ON
    -DLLVM_BUILD_LLVM_DYLIB=ON
    -DLLVM_BUILD_TESTS=ON
    -DLLVM_ENABLE_BINDINGS=OFF
    -DLLVM_ENABLE_FFI=ON
    -DLLVM_ENABLE_RTTI=ON
    -DLLVM_ENABLE_SPHINX=ON
    -DLLVM_HOST_TRIPLE=$CHOST
    -DLLVM_INCLUDE_BENCHMARKS=OFF
    -DLLVM_INSTALL_UTILS=ON
    -DLLVM_LINK_LLVM_DYLIB=ON
    -DLLVM_USE_PERF=ON
    -DSPHINX_WARNINGS_AS_ERRORS=OFF
  )
  cmake .. "${cmake_args[@]}"
  # local distribution_components=$(_get_distribution_components | paste -sd\;)
  # test -n "$distribution_components"
  # cmake_args+=(-DLLVM_DISTRIBUTION_COMPONENTS="$distribution_components")

  # cmake .. "${cmake_args[@]}"
  ninja
}

package_llvm-julia() {
  pkgdesc="Compiler infrastructure (with patch for julia)"
  depends=("llvm-libs-julia=$pkgver-$pkgrel" perl)
  optdepends=('python-setuptools: for using lit (LLVM Integrated Tester)')
  conflicts=(llvm)
  provides=("llvm=$pkgver-$pkgrel")

  cd ${repodir}/llvm/build

  DESTDIR="$pkgdir" ninja install

  # Include lit for running lit-based tests in other projects
  pushd ../utils/lit
  python3 setup.py install --root="$pkgdir" -O1
  popd

  # The runtime libraries go into llvm-libs
  mv -f "$pkgdir"/usr/lib/lib{LLVM,LTO,Remarks}*.so* "$srcdir"
  mv -f "$pkgdir"/usr/lib/LLVMgold.so "$srcdir"

  # Remove documentation sources
  rm -r "$pkgdir"/usr/share/doc/llvm/html/{_sources,.buildinfo}

  install -Dm644 ../LICENSE.TXT "$pkgdir/usr/share/licenses/$pkgname/LICENSE"
}

package_llvm-libs-julia() {
  pkgdesc="LLVM runtime libraries (with patch for julia)"
  depends=(gcc-libs zlib libzstd.so libffi.so libedit libncursesw.so libxml2)
  conflicts=("llvm-libs")
  provides=("llvm-libs=$pkgver-$pkgrel")

  install -d "$pkgdir/usr/lib"
  cp -P \
     "$srcdir"/lib{LLVM,LTO,Remarks}*.so* \
     "$srcdir"/LLVMgold.so \
     "$pkgdir/usr/lib/"

  # Symlink LLVMgold.so from /usr/lib/bfd-plugins
  # https://bugs.archlinux.org/task/28479
  install -d "$pkgdir/usr/lib/bfd-plugins"
  ln -s ../LLVMgold.so "$pkgdir/usr/lib/bfd-plugins/LLVMgold.so"

  install -Dm644 "$srcdir/${repodir}/llvm/LICENSE.TXT" \
          "$pkgdir/usr/share/licenses/$pkgname/LICENSE"
}
