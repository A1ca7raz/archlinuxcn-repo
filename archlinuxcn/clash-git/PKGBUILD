# Maintainer: Dct Mei <dctxmei@yandex.com>

pkgname=clash-git
_pkgname=clash
pkgver=1.18.0.r1.ge5f2396
pkgrel=1
pkgdesc="A rule-based tunnel in Go (git version)"
arch=('x86_64')
url="https://github.com/Dreamacro/clash"
license=('GPL3')
depends=('clash-geoip' 'glibc')
makedepends=('git' 'go')
provides=("clash=${pkgver%%.r*}")
conflicts=('clash')
backup=("etc/clash/config.yaml")
options=('!lto')
source=("${_pkgname}::git+${url}.git"
        "config.yaml"
        "clash.sysusers"
        "clash.service"
        "clash@.service")
sha256sums=('SKIP'
            '62ed4460cd2ed4b400193ad04b0cccb76d7558f87c377a0033041841a73f7945'
            '149c6448a5630af1065ea230707331ac12663128568d6cf0e9d5480e94d1d104'
            '94174930c4100a26b86c84ea8acaf4d91f1af8fcf48d53d3128fffa9db01104d'
            'f020189712a45bd1da3f9d9dc7387438a87d64979c735e14ce8132e3af620fce')

pkgver() {
    cd "${srcdir}"/"${_pkgname}"/
    git describe --long --tags | sed 's/^v//;s/\([^-]*-g\)/r\1/;s/-/./g'
}

prepare() {
    cd "${srcdir}"/"${_pkgname}"/
    sed "s/unknown version/$pkgver/" -i constant/version.go
    sed "s/unknown time/$(LANG=C date -u)/" -i constant/version.go
}

build() {
    export GOFLAGS="-buildmode=pie -trimpath -mod=readonly -modcacherw"
    export CGO_CFLAGS="${CFLAGS}"
    export CGO_CPPFLAGS="${CPPFLAGS}"
    export CGO_CXXFLAGS="${CXXFLAGS}"
    export CGO_LDFLAGS="${LDFLAGS}"
    cd "${srcdir}"/"${_pkgname}"/
    go build -ldflags="-linkmode=external" -o clash
}

check() {
    cd "${srcdir}"/"${_pkgname}"/
    go test github.com/Dreamacro/clash/...
}

package() {
    cd "${srcdir}"/"${_pkgname}"/
    install -Dm0755 clash -t "${pkgdir}"/usr/bin/
    install -Dm0644 LICENSE -t "${pkgdir}"/usr/share/licenses/clash/
    install -Dm0644 "${srcdir}"/config.yaml -t "${pkgdir}"/etc/clash/
    install -Dm0644 "${srcdir}"/clash.sysusers "${pkgdir}"/usr/lib/sysusers.d/clash.conf
    install -Dm0644 "${srcdir}"/clash.service -t "${pkgdir}"/usr/lib/systemd/system/
    install -Dm0644 "${srcdir}"/clash@.service -t "${pkgdir}"/usr/lib/systemd/system/
}
